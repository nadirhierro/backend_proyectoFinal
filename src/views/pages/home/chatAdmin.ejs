<html lang="en">
  <head>
    <%- include("../../partials/head"); %>
  </head>
  <body>
    <header><%- include("../../partials/headerUsers"); %></header>
    <main class="main">
      <%- include("../../partials/hero"); %>
      <div class="container-fluid chat">
        <div class="row">
          <div class="col-12 d-flex justify-content-center">
            <form
              id="messages"
              class="d-flex flex-column justify-content-center"
            >
              <div class="mb-3 d-flex flex-column">
                <label for="mensaje" class="form-label">Mensaje</label>
                <input
                  type="text"
                  placeholder="Ingrese su mensaje"
                  name="mensaje"
                />
              </div>
              <button type="submit" class="btn btn-primary">
                Enviar mensaje
              </button>
            </form>
          </div>
          <div
            class="col-6 d-flex flex-column justify-content-center text-center mt-5"
            id="mensajes"
          ></div>
        </div>
      </div>
    </main>
    <script src="/assets/js/socket.js"></script>
    <script>
      let formChat = document.getElementById("messages");
      let userEmail = formChat.name;

      // template para chat
      let templateChat = `
    {{#each messages}}
    <div class="message">
    <b>{{this.type}}</b> <span class="time">{{this.timestamp}} :</span> <span class="mensaje">{{this.message}}</span> </br></div>
    {{/each}}
`;

      // Listener para el form
      formChat.addEventListener("submit", (event) => {
        event.preventDefault();
        let message = event.target[0].value;

        let data = { message: message };

        if (data.message == "") {
          window.location.reload();
        } else {
          fetch("http://localhost:8080/api/messages/admins", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(data),
          })
            .then((res) => {
              socket.emit("chat", res);
            })
            .catch((err) => {
              console.log(err);
            });
        }
      });

      socket.on("chat", (data) => {
        fetch(`http://localhost:8080/api/messages/${userEmail}`)
          .then((res) => {
            return res.json();
          })
          .then((res) => {
            const template = Handlebars.compile(templateChat);
            const html = template({
              messages: res,
            });
            document.getElementById("mensajes").innerHTML = html;
          })
          .catch((err) => {
            console.log(err);
          });
      });
    </script>
  </body>
</html>
